<?php
/**
 * Created by PhpStorm.
 * User: zzwu
 * Date: 2017/3/31
 * Time: 21:35
 */

namespace app\admin\controller;

use app\admin\model\SysRoleMenu;
use think\Cache;
use think\Controller;
use think\Db;
use think\Request;

class Suppress extends Adminbase
{
    //public function _initialize()
    //{
    //    parent::_initialize(); // TODO: Change the autogenerated stub
    //    if (!zw_get_user_role_prototype())
    //    {
    //        $this->error('对不起，您没有此操作权限，不允许进行此操作');
    //    }
    //}

    /**
     * 缉私案件管理
     * @time 20170516
     * @author yxf
     **/
    public function index()
    {
        if (zw_get_user_role_prototype())
        {
            $sup = Db::view('bg_suppress_smuggling', '*')
                ->view('party_org', 'party_org_name', 'party_org.party_org_id=bg_suppress_smuggling.org_id')
                ->where(['bg_suppress_smuggling.status' => 1])
                ->order('suppress_id', 'desc')
                ->paginate(10);
        }
        else
        {
            $map=[];
            $party_org_ids = zw_get_current_user_party_org_id();
            if($party_org_ids){
                $sub_party_orgs = zw_get_content_org_subordinate();
                if($sub_party_orgs){
                    $party_org_ids .= ','.implode(',',array_column($sub_party_orgs,'party_org_id'));
                }
                $map['bg_suppress_smuggling.org_id'] = ['in',$party_org_ids];
            }
            $sup = Db::view('bg_suppress_smuggling', '*')
                ->view('party_org', 'party_org_name', 'party_org.party_org_id=bg_suppress_smuggling.org_id')
                ->where($map)
                ->where(['bg_suppress_smuggling.status' => 1])
                ->order('suppress_id', 'desc')
                ->paginate(10);
        }
        //$org = Db::view('manage_account', 'party_org_id')
        //    ->where(['maccount_id'=>lw_get_current_admin_id()])
        //    ->find();
        //$sup = Db::view('bg_suppress_smuggling', '*')
        //    ->view('party_org', 'party_org_name', 'party_org.party_org_id=bg_suppress_smuggling.org_id')
        //    ->where(['party_org.party_org_id'=>$org['party_org_id']])
        //    ->order('suppress_id', 'desc')
        //    ->paginate(10);
        $this->assign('sup', $sup);
        return $this->fetch();
    }

    /**
     * 功能：删除缉私案件信息
     * @time 20170516
     * @author yxf
     */
    public function deleteSuppress()
    {
        if (!input('post.id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $where = ['suppress_id' => Request::instance()->post('id')];
        $data =['status' => 0];
        $result = Db::name('bg_suppress_smuggling')
            ->where($where)
            ->update($data);
        return $result ? zw_sprint_result('删除成功', $result) : zw_sprint_result('删除失败, 超级管理员不允许直接删除', '', FAIL_CODE);
    }

    /**
     * 功能：新增编辑缉私案件信息
     * @time 20170516
     * @author yxf
     */
    public function addSuppress()
    {
        $userid=lw_get_current_admin_id();
        $org = Db::name('manage_account')->alias('m')
            ->field('po.party_org_name,po.party_org_id,m.maccount_id')
            ->join('hq_party_org po','po.party_org_id=m.party_org_id','LEFT')
            ->where('m.maccount_id',lw_get_current_admin_id())
            ->find();
        $this->assign('org',$org);
        return $this->fetch();
    }

    /**
     * 功能：新增缉私案件信息保存
     * @time 20170516
     * @author yxf
     */
    public function saveaddSuppress()
    {
        if (!input())
        {
            return zw_sprint_result('无效的操作，请使用正确途径操作', '', FAIL_CODE);
        }
        $data=[
            'org_id'                => Request::instance()->post('org_id'),
            'filing_time'           => Request::instance()->post('filing_time'),
            'goods_type'            => Request::instance()->post('goods_type'),
            'goods'                 => Request::instance()->post('goods'),
            'report'                => Request::instance()->post('report'),
            'goods_value'           => Request::instance()->post('goods_value'),
            'goods_tranfer'         => Request::instance()->post('goods_tranfer'),
            'fines'                 => Request::instance()->post('fines'),
            'verify'                => Request::instance()->post('verify'),
            'tranfer_result'        => Request::instance()->post('tranfer_result'),
            'vehicle_involved'      => Request::instance()->post('vehicle_involved'),
            'personnel_involved'    => Request::instance()->post('personnel_involved'),
//            'license_plate'         => Request::instance()->post('license_plate'),
//            'storage_location'      => Request::instance()->post('storage_location'),
//            'vehicle_model'         => Request::instance()->post('vehicle_model'),
//            'mobile_num'            => Request::instance()->post('mobile_num'),
            'corps_reply'           => Request::instance()->post('corps_reply'),
            'vehicle_tranfer'       => Request::instance()->post('vehicle_tranfer'),
            'case_tranfer'          => Request::instance()->post('case_tranfer'),
            'case_return'           => Request::instance()->post('case_return'),
            'case_result'           => Request::instance()->post('case_result'),
            'notes'                 => Request::instance()->post('notes'),
            'end_time'              => Request::instance()->post('end_time'),
            'status'                => 1
        ];
        $result = Db::name('bg_suppress_smuggling')->insertGetId($data);
        return $result ? zw_sprint_result('操作成功', zw_build_url('suppress/index')) : zw_sprint_result('操作失败', '', FAIL_CODE);
    }

    /**
     * 功能：获取编辑缉私案件信息
     * @time 20170516
     * @author yxf
     */
    public function editSuppress()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的角色名，请使用正确途径操作', '', FAIL_CODE);
        }
        $result = Db::view('bg_suppress_smuggling', '*')
            ->view('party_org', 'party_org_name', 'party_org.party_org_id=bg_suppress_smuggling.org_id')
            ->where(['suppress_id' => input('id')])
            ->find();
        $this->assign('supp', $result);
        return $this->fetch();
    }

    /**
     * 功能：保存缉私案件信息
     * @time 20170516
     * @author yxf
     */
    public function saveSuppress()
    {
        if (!input('post.suppress_id'))
        {
            return zw_sprint_result('无效的操作，请使用正确途径操作', '', FAIL_CODE);
        }
        $updata=[
            'filing_time'           => Request::instance()->post('filing_time'),
            'goods_type'            => Request::instance()->post('goods_type'),
            'goods'                 => Request::instance()->post('goods'),
            'report'                => Request::instance()->post('report'),
            'goods_value'           => Request::instance()->post('goods_value'),
            'goods_tranfer'         => Request::instance()->post('goods_tranfer'),
            'fines'                 => Request::instance()->post('fines'),
            'verify'                => Request::instance()->post('verify'),
            'tranfer_result'        => Request::instance()->post('tranfer_result'),
            'vehicle_involved'      => Request::instance()->post('vehicle_involved'),
            'personnel_involved'    => Request::instance()->post('personnel_involved'),
//            'license_plate'         => Request::instance()->post('license_plate'),
//            'storage_location'      => Request::instance()->post('storage_location'),
//            'vehicle_model'         => Request::instance()->post('vehicle_model'),
//            'mobile_num'            => Request::instance()->post('mobile_num'),
            'corps_reply'           => Request::instance()->post('corps_reply'),
            'vehicle_tranfer'       => Request::instance()->post('vehicle_tranfer'),
            'case_tranfer'          => Request::instance()->post('case_tranfer'),
            'case_return'           => Request::instance()->post('case_return'),
            'case_result'           => Request::instance()->post('case_result'),
            'notes'                 => Request::instance()->post('notes'),
            'end_time'              => Request::instance()->post('end_time')
        ];
        $result = Db::name('bg_suppress_smuggling')->where('suppress_id', Request::instance()->post('suppress_id'))->update($updata);
        return $result ? zw_sprint_result('操作成功', zw_build_url('suppress/index')) : zw_sprint_result('操作失败', '', FAIL_CODE);
    }

    /**
     * 缉私案件信息搜索
     * */
    public function searchsuppress()
    {
        $map['party_org_name|license_plate|storage_location|case_result'] =
            ['like', '%' . Request::instance()->get('search_info').'%'];
        if (zw_get_user_role_prototype())
        {
            $result = Db::view('bg_suppress_smuggling', '*')
                ->view('party_org', 'party_org_name', 'party_org.party_org_id=bg_suppress_smuggling.org_id')
                ->where(['status' => 1])
                ->where($map)
                ->order('suppress_id', 'desc')
                ->paginate(10, false, [
                    'type'=> 'app\admin\driver\ZzwuAjaxPage',
                    'var_page' => 'page',
                    'query' => Request::instance()->param()
                ]);
        }
        else
        {
            $maps=[];
            $party_org_ids = zw_get_current_user_party_org_id();
            if($party_org_ids){
                $sub_party_orgs = zw_get_content_org_subordinate();
                if($sub_party_orgs){
                    $party_org_ids .= ','.implode(',',array_column($sub_party_orgs,'party_org_id'));
                }
                $maps['bg_suppress_smuggling.org_id'] = ['in',$party_org_ids];
            }
            $result = Db::view('bg_suppress_smuggling', '*')
                ->view('party_org', 'party_org_name', 'party_org.party_org_id=bg_suppress_smuggling.org_id')
                ->where($map)
                ->where(['status' => 1])
                ->where($maps)
                ->order('suppress_id', 'desc')
                //->select();
                ->paginate(10, false, [
                    'type'=> 'app\admin\driver\ZzwuAjaxPage',
                    'var_page' => 'page',
                    'query' => Request::instance()->param()
                ]);
        }
        $page = $result->render();
        $result = $result->all();
        return  zw_sprint_result('获取成功', ['data' => $result, 'page' => $page]);
    }

    /**
     * 缉私案件涉案人员管理
     * @time 20170517
     * @author yxf
     **/
    public function supPerson()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $sup_id = input('id');
        $person = Db::name('bg_suppress_person')
            ->where(['suppress_id' => $sup_id])
            ->order('person_id', 'desc')
            ->paginate(10);
        $this->assign('person', $person);
        $this->assign('sup_id', $sup_id);
        return $this->fetch();
    }

    /**
     * 功能：删除缉私案件涉案人员信息
     * @time 20170516
     * @author yxf
     */
    public function deleteSupPerson()
    {
        if (!input('post.id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $where = ['person_id' => Request::instance()->post('id')];
        $result = Db::name('bg_suppress_person')
            ->where($where)
            ->delete();
        return $result ? zw_sprint_result('删除成功', $result) : zw_sprint_result('删除失败, 超级管理员不允许直接删除', '', FAIL_CODE);
    }

    /**
     * 功能：新增缉私案件涉案人员信息
     * @time 20170517
     * @author yxf
     */
    public function addSupPerson()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $sup_id = input('id');
        $this->assign('sup_id', $sup_id);
        return $this->fetch();
    }

    /**
     * 功能：新增缉私案件涉案人员信息保存
     * @time 20170517
     * @author yxf
     */
    public function saveaddSupPerson()
    {
        if (!input())
        {
            return zw_sprint_result('无效的操作，请使用正确途径操作', '', FAIL_CODE);
        }
        $supid = Request::instance()->post('suppress_id');
        $data=[
            'name'                  => Request::instance()->post('name'),
            'sex'                   => Request::instance()->post('sex'),
            'mobile_num'            => Request::instance()->post('mobile_num'),
            'suppress_id'           => Request::instance()->post('suppress_id')
        ];
        $result = Db::name('bg_suppress_person')->insertGetId($data);
        return $result ? zw_sprint_result('操作成功', zw_build_url('suppress/supperson?id='.$supid)) : zw_sprint_result('操作失败', '', FAIL_CODE);
    }

    /**
     * 功能：获取缉私案件涉案人员信息
     * @time 20170517
     * @author yxf
     */
    public function editSupPerson()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的角色名，请使用正确途径操作', '', FAIL_CODE);
        }
        $result = Db::view('bg_suppress_person', '*')
            ->where(['person_id' => input('id')])
            ->find();
        return (is_array($result) && count($result) !== 0) ? zw_sprint_result('获取成功', $result) : zw_sprint_result('获取失败', '', FAIL_CODE);
    }

    /**
     * 功能：保存缉私案件涉案人员信息
     * @time 20170517
     * @author yxf
     */
    public function saveSupPerson()
    {
        if (!input())
        {
            return zw_sprint_result('无效的操作，请使用正确途径操作', '', FAIL_CODE);
        }
        $action = Request::instance()->post('action_status');
        if ($action == 'insert') {
            $data=[
                'name'                  => Request::instance()->post('name'),
                'sex'                   => Request::instance()->post('sex'),
                'mobile_num'            => Request::instance()->post('mobile_num'),
                'suppress_id'           => Request::instance()->post('suppress_id')
            ];
            $result = Db::name('bg_suppress_person')->insertGetId($data);
        }
        elseif($action =='editor'){
            $data=[
                'name'                  => Request::instance()->post('name'),
                'sex'                   => Request::instance()->post('sex'),
                'mobile_num'            => Request::instance()->post('mobile_num')
            ];
            $result = Db::name('bg_suppress_person')->where('person_id', Request::instance()->post('person_id'))->update($data);
        }
        $supid =Request::instance()->post('suppress_id');
        return $result ? zw_sprint_result('操作成功', zw_build_url('suppress/supPerson?id='.$supid)) : zw_sprint_result('操作失败', '', FAIL_CODE);
    }

    /**
     * 缉私案件涉案人员信息搜索
     * */
    public function searchsupperson()
    {
        $map['name|mobile_num']  =
            ['like','%'.Request::instance()->get('search_info').'%'];
        $sup_id = input('id');
        $result = Db::name('bg_suppress_person')
                ->where(['suppress_id' => $sup_id])
                ->where($map)
                ->order('person_id', 'desc')
                ->paginate(10, false, [
                    'type'=> 'app\admin\driver\ZzwuAjaxPage',
                    'var_page' => 'page',
                    'query' => Request::instance()->param()
                ]);
        $page = $result->render();
        $result = $result->all();
        return  zw_sprint_result('获取成功', ['data' => $result, 'page' => $page]);
    }

    /**
     * 缉私案件涉案车辆管理
     * @time 20170517
     * @author yxf
     **/
    public function supvehicle()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $sup_id = input('id');
        $vehicle = Db::name('bg_suppress_vehicle')
            ->where(['suppress_id' => $sup_id])
            ->order('vehicle_id', 'desc')
            ->paginate(10);
        $this->assign('vehicle', $vehicle);
        $this->assign('sup_id', $sup_id);
        return $this->fetch();
    }

    /**
     * 功能：删除缉私案件涉案车辆信息
     * @time 20170517
     * @author yxf
     */
    public function deleteSupvehicle()
    {
        if (!input('post.id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $where = ['vehicle_id' => Request::instance()->post('id')];
        $result = Db::name('bg_suppress_vehicle')
            ->where($where)
            ->delete();
        return $result ? zw_sprint_result('删除成功', $result) : zw_sprint_result('删除失败, 超级管理员不允许直接删除', '', FAIL_CODE);
    }

    /**
     * 功能：新增缉私案件涉案车辆信息
     * @time 20170517
     * @author yxf
     */
    public function addSupvehicle()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的信息条目，请使用正确途径操作', '', FAIL_CODE);
        }
        $sup_id = input('id');
        $this->assign('sup_id', $sup_id);
        return $this->fetch();
    }

    /**
     * 功能：新增缉私案件涉案车辆信息保存
     * @time 20170517
     * @author yxf
     */
    public function saveaddSupvehicle()
    {
        if (!input())
        {
            return zw_sprint_result('无效的操作，请使用正确途径操作', '', FAIL_CODE);
        }
        $supid = Request::instance()->post('suppress_id');
        $data=[
            'license_plate'             => Request::instance()->post('license_plate'),
            'vehicle_model'             => Request::instance()->post('vehicle_model'),
            'storage_location'          => Request::instance()->post('storage_location'),
            'tranferstatus'             => Request::instance()->post('tranferstatus'),
            'suppress_id'               => Request::instance()->post('suppress_id')
        ];
        $result = Db::name('bg_suppress_vehicle')->insertGetId($data);
        return $result ? zw_sprint_result('操作成功', zw_build_url('suppress/supvehicle?id='.$supid)) : zw_sprint_result('操作失败', '', FAIL_CODE);
    }

    /**
     * 功能：获取缉私案件涉案车辆信息
     * @time 20170517
     * @author yxf
     */
    public function editSupvehicle()
    {
        if (!input('id'))
        {
            return zw_sprint_result('无法识别的角色名，请使用正确途径操作', '', FAIL_CODE);
        }
        $result = Db::view('bg_suppress_vehicle', '*')
            ->where(['vehicle_id' => input('id')])
            ->find();
        $this->assign('vehicle', $result);
        return $this->fetch();
    }

    /**
     * 功能：保存缉私案件涉案车辆信息
     * @time 20170517
     * @author yxf
     */
    public function saveSupvehicle()
    {
        if (!input('post.vehicle_id'))
        {
            return zw_sprint_result('无效的操作，请使用正确途径操作', '', FAIL_CODE);
        }
        $data=[
            'license_plate'             => Request::instance()->post('license_plate'),
            'vehicle_model'             => Request::instance()->post('vehicle_model'),
            'storage_location'          => Request::instance()->post('storage_location'),
            'tranferstatus'             => Request::instance()->post('tranferstatus')
        ];
        $supid =Request::instance()->post('suppress_id');
        $result = Db::name('bg_suppress_vehicle')->where('vehicle_id', Request::instance()->post('vehicle_id'))->update($data);
        return $result ? zw_sprint_result('操作成功', zw_build_url('suppress/supvehicle?id='.$supid)) : zw_sprint_result('操作失败', '', FAIL_CODE);
    }

    /**
     * 缉私案件涉案人员信息搜索
     * */
    public function searchsupvehicle()
    {
        $map['license_plate|vehicle_model|storage_location']  =
            ['like','%'.Request::instance()->get('search_info').'%'];
        $sup_id = input('id');
        $result = Db::name('bg_suppress_vehicle')
            ->where(['suppress_id' => $sup_id])
            ->where($map)
            ->order('vehicle_id', 'desc')
            ->paginate(10, false, [
                'type'=> 'app\admin\driver\ZzwuAjaxPage',
                'var_page' => 'page',
                'query' => Request::instance()->param()
            ]);
        $page = $result->render();
        $result = $result->all();
        return  zw_sprint_result('获取成功', ['data' => $result, 'page' => $page]);
    }
}
